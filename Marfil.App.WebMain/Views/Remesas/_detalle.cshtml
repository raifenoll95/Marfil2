@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Documentos.CobrosYPagos
@using Marfil.App.WebMain.Misc
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Marfil.Inf.ResourcesGlobalization.Textos.Entidades
@using Marfil.Dom.Persistencia.Model.Configuracion.Cuentas
@using Marfil.Dom.Persistencia.Model.FicherosGenerales
@using Marfil.Dom.Persistencia.ServicesView.Servicios.Campoverificacion
@using Resources

@model RemesasModel
@{
    var isreadonly = ViewData["readonly"] != null ? (bool)ViewData["readonly"] : false;
    var iseditable = ViewData["operacion"] != null && (ViewData["operacion"] == "Edit");
    var isNuevo = !isreadonly && !iseditable;
    var campoverificacion = FCampoverificacion.Instance.GetModel<CuentasModel>(WebHelper.ContextService);
    var cvfp = FCampoverificacion.Instance.GetModel<FormasPagoModel>(WebHelper.ContextService);
    var cvbancos = FCampoverificacion.Instance.GetModel<BancosModel>(WebHelper.ContextService);
}

<script src="@Url.Content("~/Scripts/jquery.redirect.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/Formulas.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Articulos/Formulas/FormulasService.js")"></script>
<script src="@Url.Content("~/Scripts/Model/Facturas/VencimientosController.js")"></script>


<div class="form-group">
    @Html.LabelFor(f => Model.Referencia, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Referencia, isreadonly || iseditable ? (object)new { @aria_label = "codigo", @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
    </div>
    <div class="col-md-2">
        @Html.ValidationMessageFor(f => Model.Referencia, "", new { @class = "text-danger" })
    </div>
</div>

@*Cuenta*@
<div class="form-group">
    @Html.LabelFor(f => Model.Fkcuentas, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            campoverificacion.Name = "Fkcuentas";
            campoverificacion.Url = Url.Action("CuentasTiposTercerosSemiExclusiveApi", "Api");
            campoverificacion.Valor = Model.Fkcuentas;
            campoverificacion.Titulo = Clientes.TituloEntidadSingular;
            campoverificacion.SoloLectura = isreadonly || iseditable;
            campoverificacion.Params = "{\"tipocuenta\":" + (int)TiposCuentas.Clientes + "}";
            campoverificacion.Obligatorio = true;
        }
        @Html.Partial("CampoverificacionUI", campoverificacion)
    </div>
    <div class="col-md-10 col-md-offset-2">
        @Html.ValidationMessageFor(f => Model.Fkcuentas, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(f => Model.Importegiro, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.TextBoxFor(f => Model.Importegiro, isreadonly || iseditable ? (object)new { @aria_label = "codigo", @class = "form-control", @readonly = "readonly" } : (object)new { @class = "form-control", @autofocus = "" })
    </div>
    <div class="col-md-2">
        @Html.ValidationMessageFor(f => Model.Importegiro, "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(f => Model.Fechavencimiento, new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.EditorFor(f => Model.Fechavencimiento)
    </div>
</div>




@{
    if (isNuevo || iseditable)
    {
        <script src="@Url.Content("~/components/bootbox.js/bootbox.min.js")"></script>
        <script src="@Url.Content("~/Scripts/Model/Misc/VerificaPk.js")"></script>
    }
}
