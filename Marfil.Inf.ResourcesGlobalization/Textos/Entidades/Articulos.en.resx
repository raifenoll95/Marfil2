<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TituloEntidad" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Descripcion" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Descripcionabreviada" xml:space="preserve">
    <value>Short description</value>
  </data>
  <data name="Familia" xml:space="preserve">
    <value>Family</value>
  </data>
  <data name="Materiales" xml:space="preserve">
    <value>Materials</value>
  </data>
  <data name="Caracteristicas" xml:space="preserve">
    <value>Characteristics</value>
  </data>
  <data name="Grosores" xml:space="preserve">
    <value>Thickness</value>
  </data>
  <data name="Coste" xml:space="preserve">
    <value>Acquisition cost</value>
  </data>
  <data name="Preciominimoventa" xml:space="preserve">
    <value>Minimum price</value>
  </data>
  <data name="TarifaDescripcion" xml:space="preserve">
    <value>Price list</value>
  </data>
  <data name="TarifaCuenta" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Precio" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Costeindirecto" xml:space="preserve">
    <value>Indirect costs</value>
  </data>
  <data name="Costefabricacion" xml:space="preserve">
    <value>Manufacturing cost</value>
  </data>
  <data name="Otroscostes" xml:space="preserve">
    <value>Other costs</value>
  </data>
  <data name="Costeportes" xml:space="preserve">
    <value>Shipping costs</value>
  </data>
  <data name="Preciomateriaprima" xml:space="preserve">
    <value>Raw material price</value>
  </data>
  <data name="Costemateriaprima" xml:space="preserve">
    <value>Raw material cost</value>
  </data>
  <data name="Costeelaboracionmateriaprima" xml:space="preserve">
    <value>Elab. cost material</value>
  </data>
  <data name="Medidas" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="Fkgruposiva" xml:space="preserve">
    <value>VAT group</value>
  </data>
  <data name="ErrorArticuloInexistente" xml:space="preserve">
    <value>Item doesn't exist</value>
  </data>
  <data name="Descuento" xml:space="preserve">
    <value>% Dto.</value>
  </data>
  <data name="Stock" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="TituloEntidadSingular" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Codigolibre" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Acabados" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="Porcentajemerma" xml:space="preserve">
    <value>% Decrease</value>
  </data>
  <data name="Fkguiascontables" xml:space="preserve">
    <value>accounting guide</value>
  </data>
  <data name="Partidaarancelaria" xml:space="preserve">
    <value>Tariff item</value>
  </data>
  <data name="Kilosud" xml:space="preserve">
    <value>Kilos/Unit of measurement</value>
  </data>
  <data name="Medidalibre" xml:space="preserve">
    <value>Free measure</value>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>Work</value>
  </data>
  <data name="Excluircomisiones" xml:space="preserve">
    <value>Exclude from commissions</value>
  </data>
  <data name="Exentoretencion" xml:space="preserve">
    <value>exempt from withholding</value>
  </data>
  <data name="Gestionarcaducidad" xml:space="preserve">
    <value>Manage expiration</value>
  </data>
  <data name="Tiempostandardfabricacion" xml:space="preserve">
    <value>Standard manufacturing time (min.)</value>
  </data>
  <data name="Gestionstock" xml:space="preserve">
    <value>Stock management</value>
  </data>
  <data name="Tipogestionlotes" xml:space="preserve">
    <value>Lots management</value>
  </data>
  <data name="Stocknegativoautorizado" xml:space="preserve">
    <value>Authorized negative stock</value>
  </data>
  <data name="Existenciasminimasmetros" xml:space="preserve">
    <value>Minimum stock meters</value>
  </data>
  <data name="Existenciasmaximasmetros" xml:space="preserve">
    <value>Maximum stock meters</value>
  </data>
  <data name="Existenciasminimasunidades" xml:space="preserve">
    <value>Minimum stock units</value>
  </data>
  <data name="Existenciasmaximasunidades" xml:space="preserve">
    <value>Maximum stock units</value>
  </data>
  <data name="Web" xml:space="preserve">
    <value>Viewable on the web</value>
  </data>
  <data name="Fkcontadores" xml:space="preserve">
    <value>Counter</value>
  </data>
  <data name="Fkunidades" xml:space="preserve">
    <value>Measure unit</value>
  </data>
  <data name="Singestion" xml:space="preserve">
    <value>No management</value>
  </data>
  <data name="Loteobligatorio" xml:space="preserve">
    <value>Mandatory lot</value>
  </data>
  <data name="Loteopcional" xml:space="preserve">
    <value>Optional lot</value>
  </data>
  <data name="Rendimientom2m3" xml:space="preserve">
    <value>Yield m2/ m3</value>
  </data>
  <data name="Articulocomentario" xml:space="preserve">
    <value>It's article comment</value>
  </data>
  <data name="Lotefraccionable" xml:space="preserve">
    <value>Divisible lot</value>
  </data>
  <data name="Tipoivavariable" xml:space="preserve">
    <value>variable VAT rate</value>
  </data>
  <data name="Piezascaja" xml:space="preserve">
    <value>Pieces x box</value>
  </data>
  <data name="Categoria" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="TipoCategoriaAmbas" xml:space="preserve">
    <value>Both</value>
  </data>
  <data name="TipoCategoriaVentas" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="TipoCategoriaCompras" xml:space="preserve">
    <value>Purchases</value>
  </data>
  <data name="UltimaSalida" xml:space="preserve">
    <value>exit document</value>
  </data>
  <data name="UltimaEntrada" xml:space="preserve">
    <value>Entry document</value>
  </data>
  <data name="Fecha" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Movimientos" xml:space="preserve">
    <value>Registers</value>
  </data>
  <data name="Consumibles" xml:space="preserve">
    <value>Consumable</value>
  </data>
  <data name="Clasificacion" xml:space="preserve">
    <value>Item classification</value>
  </data>
  <data name="ArticulosTercero" xml:space="preserve">
    <value>Third party items</value>
  </data>
  <data name="Componentes" xml:space="preserve">
    <value>Parts</value>
  </data>
  <data name="Ean13" xml:space="preserve">
    <value>ean13</value>
  </data>
  <data name="Metros" xml:space="preserve">
    <value>In meters</value>
  </data>
  <data name="Piezas" xml:space="preserve">
    <value>In pieces</value>
  </data>
  <data name="Stockmaximo" xml:space="preserve">
    <value>Maximum stock</value>
  </data>
  <data name="Stockminimo" xml:space="preserve">
    <value>Minimum stock</value>
  </data>
  <data name="Stockseguridad" xml:space="preserve">
    <value>Security stock</value>
  </data>
  <data name="Almacenes" xml:space="preserve">
    <value>Warehouses</value>
  </data>
</root>