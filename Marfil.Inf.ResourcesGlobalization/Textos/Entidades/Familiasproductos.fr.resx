<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Id" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Descripcion" xml:space="preserve">
    <value>La description</value>
  </data>
  <data name="Descripcionabreviada" xml:space="preserve">
    <value>Brève description</value>
  </data>
  <data name="TipoFamiliaGeneral" xml:space="preserve">
    <value>Général</value>
  </data>
  <data name="TipoFamiliaBloque" xml:space="preserve">
    <value>Bloquer</value>
  </data>
  <data name="TipoFamiliaTabla" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="TituloEntidad" xml:space="preserve">
    <value>Familles de produits</value>
  </data>
  <data name="Fkcontador" xml:space="preserve">
    <value>Compteur</value>
  </data>
  <data name="Fkguiascontables" xml:space="preserve">
    <value>guide comptable</value>
  </data>
  <data name="Tipofamilia" xml:space="preserve">
    <value>type de famille</value>
  </data>
  <data name="Gestionstock" xml:space="preserve">
    <value>Gestion de stock</value>
  </data>
  <data name="Articulonegocio" xml:space="preserve">
    <value>C'est un article d'affaires</value>
  </data>
  <data name="Fkunidadesmedida" xml:space="preserve">
    <value>Unités de mesure</value>
  </data>
  <data name="Descripcionabreviadagenerada" xml:space="preserve">
    <value>Brève description de la génération</value>
  </data>
  <data name="Descripcion2generada" xml:space="preserve">
    <value>Description secondaire de la génération</value>
  </data>
  <data name="Descripcion1generada" xml:space="preserve">
    <value>descriptif génération</value>
  </data>
  <data name="Descripcionarticulofamiliamaterial" xml:space="preserve">
    <value>Inclure la description de la famille de matériaux</value>
  </data>
  <data name="Descripcionarticuloacabado" xml:space="preserve">
    <value>Inclure la description terminée</value>
  </data>
  <data name="Descripcionarticulogrosor" xml:space="preserve">
    <value>inclure l'épaisseur de la description</value>
  </data>
  <data name="Descripcionarticulocaracteristica" xml:space="preserve">
    <value>Inclure la description de la fonctionnalité</value>
  </data>
  <data name="Descripcionarticulomaterial" xml:space="preserve">
    <value>Inclure la description du matériel</value>
  </data>
  <data name="Descripionarticulofamilia" xml:space="preserve">
    <value>Inclure la description de la famille</value>
  </data>
  <data name="Validaracabado" xml:space="preserve">
    <value>valider la finition</value>
  </data>
  <data name="Validargrosor" xml:space="preserve">
    <value>valider l'épaisseur</value>
  </data>
  <data name="Validarcaracteristica" xml:space="preserve">
    <value>valider la fonctionnalité</value>
  </data>
  <data name="Validarmaterial" xml:space="preserve">
    <value>valider le matériel</value>
  </data>
  <data name="Editargrueso" xml:space="preserve">
    <value>permet d'éditer grossièrement</value>
  </data>
  <data name="Editarancho" xml:space="preserve">
    <value>Permet de modifier la largeur</value>
  </data>
  <data name="Editarlargo" xml:space="preserve">
    <value>Permet de modifier la longueur</value>
  </data>
  <data name="PartesDescripcionFamilia" xml:space="preserve">
    <value>Famille</value>
  </data>
  <data name="PartesDescripcionMaterial" xml:space="preserve">
    <value>Matériel</value>
  </data>
  <data name="PartesDescripcionCaracteristica" xml:space="preserve">
    <value>Caractéristique</value>
  </data>
  <data name="PartesDescripcionGrosor" xml:space="preserve">
    <value>Grosseur</value>
  </data>
  <data name="PartesDescripcionAcabado" xml:space="preserve">
    <value>Finir</value>
  </data>
  <data name="PartesDescripcionFamiliamaterial" xml:space="preserve">
    <value>famille de matériaux</value>
  </data>
  <data name="Fkgruposiva" xml:space="preserve">
    <value>Groupe TVA</value>
  </data>
  <data name="ErrorContadorGestionStock" xml:space="preserve">
    <value>Un compteur ne peut pas être affecté à une famille qui n'a pas de gestion de stock/lot</value>
  </data>
  <data name="TipoLibreTabla" xml:space="preserve">
    <value>Libre</value>
  </data>
  <data name="ErrorAncho" xml:space="preserve">
    <value>La valeur de la largeur de l'article {0} doit être comprise entre {1} et {2}</value>
  </data>
  <data name="ErrorGrueso" xml:space="preserve">
    <value>La valeur brute de l'article {0} doit être comprise entre {1} et {2}</value>
  </data>
  <data name="ErrorLargo" xml:space="preserve">
    <value>La valeur longue de l'article {0} doit être comprise entre {1} et {2}</value>
  </data>
  <data name="ValidarDimensiones" xml:space="preserve">
    <value>Valider les dimensions</value>
  </data>
  <data name="MinLargo" xml:space="preserve">
    <value>longueur minimale</value>
  </data>
  <data name="MaxLargo" xml:space="preserve">
    <value>Maximale longue</value>
  </data>
  <data name="MinAncho" xml:space="preserve">
    <value>largeur minimale</value>
  </data>
  <data name="MaxAncho" xml:space="preserve">
    <value>largeur maximale</value>
  </data>
  <data name="MinGrueso" xml:space="preserve">
    <value>épaisseur minimale</value>
  </data>
  <data name="MaxGrueso" xml:space="preserve">
    <value>épaisseur maximale</value>
  </data>
  <data name="Consumibles" xml:space="preserve">
    <value>consommables</value>
  </data>
  <data name="Clasificacion" xml:space="preserve">
    <value>classement des articles</value>
  </data>
</root>